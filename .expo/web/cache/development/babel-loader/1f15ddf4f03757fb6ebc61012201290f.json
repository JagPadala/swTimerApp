{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/sidkumar/Documents/swTimerApp/components/RunTimerScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { ListItem, Text, Card, Button } from 'react-native-elements';\nimport firebase from \"../Firebase\";\nimport moment from \"moment\";\nimport { Audio } from 'expo-av';\nimport * as Speech from 'expo-speech';\nimport { speak } from \"expo-speech\";\n\nvar RunTimerScreen = function (_Component) {\n  _inherits(RunTimerScreen, _Component);\n\n  var _super = _createSuper(RunTimerScreen);\n\n  function RunTimerScreen(props) {\n    var _this;\n\n    _classCallCheck(this, RunTimerScreen);\n\n    _this = _super.call(this, props);\n\n    _this.onCollectionUpdate = function (querySnapshot) {\n      var tasks = [];\n      querySnapshot.forEach(function (doc) {\n        var _doc$data = doc.data(),\n            taskName = _doc$data.taskName,\n            timeSeconds = _doc$data.timeSeconds,\n            sequenceNumber = _doc$data.sequenceNumber;\n\n        console.log(\"Tasks data\");\n        console.log(doc.data());\n        tasks.push({\n          key: doc.id,\n          doc: doc,\n          taskName: taskName,\n          timeSeconds: timeSeconds,\n          sequenceNumber: sequenceNumber\n        });\n      });\n      console.log(\"Setting state\");\n      console.log(_this.state);\n\n      _this.setState({\n        tasks: tasks,\n        numberOfTasks: tasks.length,\n        currentTask: 0,\n        playing: false\n      });\n\n      if (_this.state.tasks.length > 0) {\n        _this.state.secs = _this.state.tasks[0].timeSeconds;\n        _this.state.currentTaskName = _this.state.tasks[0].taskName;\n        _this.state.image = _this.state.tasks[0].image;\n        console.log(\"After setting the state\");\n        console.log(tasks.length);\n        console.log(tasks[0]);\n      } else if (_this.state.tasks.taskName == null) {\n        _this.state.secs = 0;\n        _this.state.currentTaskName = 'Please add some tasks first!';\n        _this.state.currentTask--;\n      }\n    };\n\n    _this.beginSession = function () {\n      if (!_this.state.playing) {\n        _this.state.eventDate = moment.duration().add({\n          days: 0,\n          hours: 0,\n          minutes: 0,\n          seconds: _this.state.tasks[0].timeSeconds\n        });\n        _this.state.currentTaskName = _this.state.tasks[0].taskName;\n        _this.state.playing = true;\n\n        _this.startTimer();\n      } else {\n        _this.startTimer();\n      }\n\n      _this.setState({\n        sessionInProgress: true\n      });\n    };\n\n    _this.stopSession = function () {\n      _this.state.timerF = clearInterval(_this.state.timerF);\n\n      _this.setState({\n        sessionInProgress: false\n      });\n    };\n\n    _this.onSpeak = function () {\n      Speech.speak(_this.state.currentTaskName, {\n        language: 'en',\n        pitch: 1,\n        rate: .6\n      });\n    };\n\n    var navigation = _this.props.navigation;\n    _this.refDetails = firebase.firestore().collection('timers').doc(JSON.parse(navigation.getParam('timerkey'))).collection('tasks').orderBy('sequenceNumber');\n    _this.state = {\n      isLoading: true,\n      timers: {},\n      key: '',\n      currentTimer: '10:00',\n      sessionInProgress: false,\n      eventDate: moment.duration().add({\n        days: 0,\n        hours: 0,\n        minutes: 0,\n        seconds: 10\n      }),\n      days: 0,\n      hours: 0,\n      mins: 0,\n      secs: 0\n    };\n    return _this;\n  }\n\n  _createClass(RunTimerScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var navigation = this.props.navigation;\n      var ref = firebase.firestore().collection('timers').doc(JSON.parse(navigation.getParam('timerkey')));\n      this.unsubscribe = this.refDetails.onSnapshot(this.onCollectionUpdate);\n      ref.get().then(function (doc) {\n        if (doc.exists) {\n          _this2.setState({\n            timer: doc.data(),\n            key: doc.id,\n            isLoading: false,\n            timerkey: JSON.parse(navigation.getParam('timerkey'))\n          });\n        } else {\n          console.log(\"No such document!\");\n        }\n      });\n      this.sound = new Audio.Sound();\n      var status = {\n        shouldPlay: false\n      };\n      this.sound.loadAsync(require(\"../assets/bell.mp3\"), status, false);\n\n      var speak = function speak() {\n        var thingToSay = 'hello';\n        Speech.speak(thingToSay);\n      };\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.state.timerF);\n    }\n  }, {\n    key: \"playTone\",\n    value: function playTone() {\n      this.sound.playAsync();\n    }\n  }, {\n    key: \"playDelayed\",\n    value: function playDelayed() {\n      setTimeout(this.onSpeak, 500);\n    }\n  }, {\n    key: \"resetTimer\",\n    value: function resetTimer() {}\n  }, {\n    key: \"startTimer\",\n    value: function startTimer() {\n      var _this3 = this;\n\n      this.playDelayed();\n      this.state.timerF = setInterval(function () {\n        var eventDate = _this3.state.eventDate;\n\n        if (eventDate <= 0) {\n          clearInterval(_this3.state.timerF);\n\n          _this3.playTone();\n\n          _this3.state.currentTask++;\n\n          if (_this3.state.currentTask < _this3.state.tasks.length) {\n            _this3.state.eventDate = moment.duration().add({\n              days: 0,\n              hours: 0,\n              minutes: 0,\n              seconds: _this3.state.tasks[_this3.state.currentTask].timeSeconds\n            });\n            _this3.state.currentTaskName = _this3.state.tasks[_this3.state.currentTask].taskName;\n\n            _this3.startTimer();\n\n            _this3.playTone();\n          }\n        } else {\n          if (_this3.state.sessionInProgress) {\n            eventDate = eventDate.subtract(1, \"s\");\n            var days = eventDate.days();\n            var hours = eventDate.hours();\n            var mins = eventDate.minutes();\n            var secs = eventDate.seconds();\n\n            _this3.setState({\n              days: days,\n              hours: hours,\n              mins: mins,\n              secs: secs,\n              eventDate: eventDate\n            });\n          }\n        }\n      }, 1000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: styles.activity,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 17\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          color: \"#0000ff\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 21\n          }\n        }));\n      }\n\n      return React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }\n      }, React.createElement(Card, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.subContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        h3: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 29\n        }\n      }, this.state.timer.name)), React.createElement(View, {\n        style: styles.header,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.headerText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 29\n        }\n      }, \"Task \", this.state.currentTask + 1, \"/\", this.state.numberOfTasks)), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.timer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 29\n        }\n      }, \" \" + this.state.mins + \":\" + this.state.secs)), React.createElement(Text, {\n        style: styles.instructions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 25\n        }\n      }, this.state.currentTaskName), !this.state.sessionInProgress && this.state.numberOfTasks > 0 && React.createElement(TouchableOpacity, {\n        style: styles.beginButton,\n        onPress: this.beginSession,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.colorWhite,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 29\n        }\n      }, \"Start\")), this.state.sessionInProgress && React.createElement(TouchableOpacity, {\n        style: styles.stopButton,\n        onPress: this.stopSession,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.colorWhite,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 29\n        }\n      }, \"Pause\")))));\n    }\n  }]);\n\n  return RunTimerScreen;\n}(Component);\n\nRunTimerScreen.navigationOptions = {\n  title: 'Run Timer'\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  subContainer: {\n    flex: 1,\n    paddingBottom: 20,\n    borderBottomWidth: 2,\n    borderBottomColor: '#CCCCCC'\n  },\n  activity: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  detailButton: {\n    marginTop: 10\n  },\n  header: {\n    position: 'absolute',\n    top: 0,\n    height: 60,\n    width: '100%',\n    backgroundColor: '#4CAF50'\n  },\n  headerText: {\n    fontSize: 24,\n    color: '#fff',\n    paddingTop: 15,\n    paddingLeft: 10,\n    textAlign: 'center'\n  },\n  \"timer\": {\n    fontSize: 80,\n    textAlign: 'center',\n    margin: 10,\n    paddingTop: 30\n  },\n  \"instructions\": {\n    fontSize: 20,\n    textAlign: 'center',\n    margin: 10,\n    paddingTop: 15\n  },\n  beginButton: {\n    margin: 40,\n    padding: 40,\n    backgroundColor: '#4CAF50',\n    width: '80%'\n  },\n  stopButton: {\n    margin: 40,\n    padding: 40,\n    backgroundColor: '#F44336',\n    width: '80%'\n  },\n  colorWhite: {\n    textAlign: 'center',\n    color: '#fff',\n    fontSize: 26\n  }\n});\nexport default RunTimerScreen;","map":{"version":3,"sources":["/Users/sidkumar/Documents/swTimerApp/components/RunTimerScreen.js"],"names":["React","Component","ListItem","Text","Card","Button","firebase","moment","Audio","Speech","speak","RunTimerScreen","props","onCollectionUpdate","querySnapshot","tasks","forEach","doc","data","taskName","timeSeconds","sequenceNumber","console","log","push","key","id","state","setState","numberOfTasks","length","currentTask","playing","secs","currentTaskName","image","beginSession","eventDate","duration","add","days","hours","minutes","seconds","startTimer","sessionInProgress","stopSession","timerF","clearInterval","onSpeak","language","pitch","rate","navigation","refDetails","firestore","collection","JSON","parse","getParam","orderBy","isLoading","timers","currentTimer","mins","ref","unsubscribe","onSnapshot","get","then","exists","timer","timerkey","sound","Sound","status","shouldPlay","loadAsync","require","thingToSay","playAsync","setTimeout","playDelayed","setInterval","playTone","subtract","styles","activity","container","subContainer","name","header","headerText","instructions","beginButton","colorWhite","stopButton","navigationOptions","title","StyleSheet","create","flex","padding","paddingBottom","borderBottomWidth","borderBottomColor","position","left","right","top","bottom","alignItems","justifyContent","detailButton","marginTop","height","width","backgroundColor","fontSize","color","paddingTop","paddingLeft","textAlign","margin"],"mappings":"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","sourcesContent":["// Commit\nimport React, { Component } from 'react';\nimport { StyleSheet, ScrollView, ActivityIndicator, View, TouchableOpacity } from 'react-native';\nimport {  ListItem, Text, Card, Button } from 'react-native-elements';\nimport firebase from '../Firebase';\nimport moment from \"moment\"\nimport { Audio } from 'expo-av';\n\nimport * as Speech from 'expo-speech';\nimport {speak} from \"expo-speech\";\n\n\n\nclass RunTimerScreen extends Component {\n    static navigationOptions = {\n        title: 'Run Timer',\n    };\n\n    constructor(props) {\n        super(props);\n        const { navigation } = this.props;\n        this.refDetails = firebase.firestore().collection('timers').doc(JSON.parse(navigation.getParam('timerkey'))).collection('tasks').orderBy('sequenceNumber');\n\n        this.state = {\n            isLoading: true,\n            timers: {},\n            key: '',\n            currentTimer: '10:00',\n            sessionInProgress: false,\n            eventDate:moment.duration().add({days:0,hours:0,minutes:0,seconds:10}), // add 9 full days, 3 hours, 40 minutes and 50 seconds\n            days:0,\n            hours:0,\n            mins:0,\n            secs:0\n        };\n    }\n\n    componentDidMount() {\n        const { navigation } = this.props;\n\n        const ref = firebase.firestore().collection('timers').doc(JSON.parse(navigation.getParam('timerkey')));\n        this.unsubscribe = this.refDetails.onSnapshot(this.onCollectionUpdate);\n        ref.get().then((doc) => {\n            if (doc.exists) {\n                this.setState({\n                    timer: doc.data(),\n                    key: doc.id,\n                    isLoading: false,\n                    timerkey:JSON.parse(navigation.getParam('timerkey')),\n                });\n\n            } else {\n                console.log(\"No such document!\");\n            }\n        });\n        this.sound = new Audio.Sound();\n        const status = {\n            shouldPlay: false,\n        };\n\n        this.sound.loadAsync(require('../assets/bell.mp3'), status, false);\n        const speak = () => {\n            const thingToSay = 'hello';\n            Speech.speak(thingToSay);\n        };\n\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.state.timerF );\n    }\n\n\n    onCollectionUpdate = (querySnapshot) => {\n        const tasks = [];\n        querySnapshot.forEach((doc) => {\n            const { taskName, timeSeconds, sequenceNumber } = doc.data();\n            console.log(\"Tasks data\")\n            console.log(doc.data());\n            tasks.push({\n                key: doc.id,\n                doc, // DocumentSnapshot\n                taskName,\n                timeSeconds,\n                sequenceNumber\n            });\n        });\n        console.log(\"Setting state\");\n        console.log(this.state);\n        this.setState({\n            tasks : tasks,\n            numberOfTasks : tasks.length,\n            currentTask : 0,\n            playing : false\n        });\n\n\n\n        if (this.state.tasks.length>0) {\n            this.state.secs = this.state.tasks[0].timeSeconds;\n            this.state.currentTaskName = this.state.tasks[0].taskName;\n            this.state.image = this.state.tasks[0].image;\n            console.log(\"After setting the state\");\n            console.log(tasks.length);\n            console.log(tasks[0]);\n        } else if (this.state.tasks.taskName == null) {\n            this.state.secs = 0;\n            this.state.currentTaskName = 'Please add some tasks first!';\n            this.state.currentTask--;\n\n        }\n\n\n\n\n    }\n\n\n\n\n    playTone () {\n        this.sound.playAsync();\n    }\n\n    playDelayed(){\n        setTimeout(this.onSpeak, 500)\n    }\n\n\n    resetTimer () {}\n    startTimer () {\n        this.playDelayed();\n\n\n        this.state.timerF = setInterval(()=>{\n\n            let { eventDate} = this.state\n\n            if(eventDate <=0){\n                clearInterval(this.state.timerF )\n                this.playTone()\n                this.state.currentTask ++;\n                if (this.state.currentTask < this.state.tasks.length) {\n                    this.state.eventDate = moment.duration().add({days:0,hours:0,minutes:0,seconds:this.state.tasks[this.state.currentTask].timeSeconds});\n                    this.state.currentTaskName = this.state.tasks[this.state.currentTask].taskName;\n                    this.startTimer()\n                    this.playTone()\n                }\n\n\n\n            }else {\n                if (this.state.sessionInProgress) {\n                eventDate = eventDate.subtract(1,\"s\")\n                const days = eventDate.days()\n                const hours = eventDate.hours()\n                const mins = eventDate.minutes()\n                const secs = eventDate.seconds()\n\n                this.setState({\n                    days,\n                    hours,\n                    mins,\n                    secs,\n                    eventDate\n                })\n            }\n            }\n        },1000)\n\n    }\n    beginSession = () => {\n\n\n\n        if (!this.state.playing ) {\n            this.state.eventDate = moment.duration().add({days:0,hours:0,minutes:0,seconds:this.state.tasks[0].timeSeconds});\n            this.state.currentTaskName = this.state.tasks[0].taskName;\n            this.state.playing = true;\n            this.startTimer()\n\n        } else {\n            this.startTimer()\n\n        }\n\n        this.setState({\n            sessionInProgress: true\n        })\n    }\n    stopSession = () => {\n\n        this.state.timerF = clearInterval(this.state.timerF);\n        this.setState({\n            sessionInProgress: false\n        })\n\n    }\n\n\n    onSpeak = () => {\n        Speech.speak(this.state.currentTaskName, {\n            language: 'en',\n            pitch: 1,\n            rate: .6,\n        });\n    }\n\n\n\n    render() {\n        if(this.state.isLoading){\n            return(\n                <View style={styles.activity}>\n                    <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n                </View>\n            )\n        }\n        return (\n            <ScrollView>\n                <Card style={styles.container}>\n                    <View style={styles.subContainer}>\n                        <View>\n                            <Text h3>{this.state.timer.name}</Text>\n                        </View>\n\n                        <View style={styles.header}>\n                            <Text style={styles.headerText}>Task {this.state.currentTask+1}/{this.state.numberOfTasks}</Text>\n                        </View>\n\n\n\n                        <View >\n                            <Text style={styles.timer} >{` ${this.state.mins}:${this.state.secs}`}</Text>\n                        </View>\n\n                        <Text style={styles.instructions}>{this.state.currentTaskName}</Text>\n\n\n                        {!this.state.sessionInProgress && this.state.numberOfTasks > 0 &&\n                        <TouchableOpacity style={styles.beginButton} onPress={this.beginSession}>\n                            <Text style={styles.colorWhite}>Start</Text>\n                        </TouchableOpacity>\n                        }\n                        { this.state.sessionInProgress &&\n                        <TouchableOpacity style={styles.stopButton} onPress={this.stopSession}>\n                            <Text style={styles.colorWhite}>Pause</Text>\n                        </TouchableOpacity>\n                        }\n\n                    </View>\n\n                </Card>\n            </ScrollView>\n        );\n    }\n\n\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 20\n    },\n    subContainer: {\n        flex: 1,\n        paddingBottom: 20,\n        borderBottomWidth: 2,\n        borderBottomColor: '#CCCCCC',\n    },\n    activity: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    detailButton: {\n        marginTop: 10\n    },\n    header: {\n        position: 'absolute',\n        top: 0,\n        height: 60,\n        width: '100%',\n        backgroundColor: '#4CAF50'\n    },\n    headerText: {\n        fontSize: 24,\n        color: '#fff',\n        paddingTop: 15,\n        paddingLeft: 10,\n        textAlign: 'center'\n    },\n    \"timer\": {\n        fontSize: 80,\n        textAlign: 'center',\n        margin: 10,\n        paddingTop: 30,\n    },\n    \"instructions\": {\n        fontSize: 20,\n        textAlign: 'center',\n        margin: 10,\n        paddingTop: 15,\n    },\n    beginButton: {\n        margin: 40,\n        padding: 40,\n        backgroundColor: '#4CAF50',\n        width: '80%',\n    },\n    stopButton: {\n        margin: 40,\n        padding: 40,\n        backgroundColor: '#F44336',\n        width: '80%',\n    },\n    colorWhite: {\n        textAlign: 'center',\n        color: '#fff',\n        fontSize: 26\n    },\n})\n\nexport default RunTimerScreen;"]},"metadata":{},"sourceType":"module"}