{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/sidkumar/Documents/swTimerApp/components/TimerDetailScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ListItem, Text, Card, Button, Icon, Avatar } from 'react-native-elements';\nimport firebase from \"../Firebase\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\n\nvar TimerDetailScreen = function (_Component) {\n  _inherits(TimerDetailScreen, _Component);\n\n  var _super = _createSuper(TimerDetailScreen);\n\n  function TimerDetailScreen(props) {\n    var _this;\n\n    _classCallCheck(this, TimerDetailScreen);\n\n    _this = _super.call(this, props);\n\n    _this.onCollectionUpdate = function (querySnapshot) {\n      var tasks = [];\n      querySnapshot.forEach(function (doc) {\n        var _doc$data = doc.data(),\n            taskName = _doc$data.taskName,\n            timeSeconds = _doc$data.timeSeconds,\n            sequenceNumber = _doc$data.sequenceNumber,\n            image = _doc$data.image;\n\n        console.log(\"Tasks data\");\n        console.log(doc.data());\n        tasks.push({\n          key: doc.id,\n          doc: doc,\n          taskName: taskName,\n          timeSeconds: timeSeconds,\n          sequenceNumber: sequenceNumber,\n          image: image\n        });\n      });\n      console.log(\"Setting state\");\n      console.log(_this.state);\n      tasks.sort(function (a, b) {\n        return Number(a.sequenceNumber) > Number(b.sequenceNumber) ? 1 : -1;\n      });\n\n      _this.setState({\n        tasks: tasks\n      });\n\n      console.log(\"After setting the state\");\n      console.log(tasks.length);\n      console.log(tasks[0]);\n    };\n\n    var navigation = _this.props.navigation;\n    _this.refDetails = firebase.firestore().collection('timers').doc(JSON.parse(navigation.getParam('timerkey'))).collection('tasks').orderBy('sequenceNumber');\n    _this.state = {\n      isLoading: true,\n      timers: {},\n      key: ''\n    };\n    return _this;\n  }\n\n  _createClass(TimerDetailScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var navigation = this.props.navigation;\n      var ref = firebase.firestore().collection('timers').doc(JSON.parse(navigation.getParam('timerkey')));\n      this.unsubscribe = this.refDetails.onSnapshot(this.onCollectionUpdate);\n      ref.get().then(function (doc) {\n        if (doc.exists) {\n          _this2.setState({\n            timer: doc.data(),\n            key: doc.id,\n            isLoading: false,\n            timerkey: JSON.parse(navigation.getParam('timerkey'))\n          });\n        } else {\n          console.log(\"No such document!\");\n        }\n      });\n    }\n  }, {\n    key: \"deleteTimer\",\n    value: function deleteTimer(key) {\n      var _this3 = this;\n\n      var navigation = this.props.navigation;\n      this.setState({\n        isLoading: true\n      });\n      firebase.firestore().collection('timers').doc(key).delete().then(function () {\n        console.log(\"Document successfully deleted!\");\n\n        _this3.setState({\n          isLoading: false\n        });\n\n        navigation.navigate('Timer');\n      }).catch(function (error) {\n        console.error(\"Error removing document: \", error);\n\n        _this3.setState({\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"createTwoButtonAlert\",\n    value: function createTwoButtonAlert(key) {\n      var _this4 = this;\n\n      console.log(\"In the alert function\", key);\n      Alert.alert(\"Confirm\", \"Do you really want to delete\", [{\n        text: \"Cancel\",\n        onPress: function onPress() {\n          return console.log(\"Cancel Pressed\");\n        },\n        style: \"cancel\"\n      }, {\n        text: \"Ok\",\n        onPress: function onPress() {\n          return _this4.deleteTimer(_this4.state.key);\n        }\n      }], {\n        cancelable: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: styles.activity,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          color: \"#0000ff\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 21\n          }\n        }));\n      }\n\n      return React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }\n      }, React.createElement(Card, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.subContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }\n      }, this.state.tasks.map(function (item, i) {\n        return React.createElement(ListItem, {\n          key: i,\n          bottomDivider: true,\n          onPress: function onPress() {\n            console.log(\"pressed on details\");\n\n            _this5.props.navigation.navigate('EditTask', {\n              taskkey: \"\" + JSON.stringify(item.key),\n              timerkey: \"\" + JSON.stringify(_this5.state.timerkey)\n            });\n          },\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 33\n          }\n        }, React.createElement(Avatar, {\n          rounded: true,\n          title: \"T\",\n          source: {\n            uri: item.image\n          },\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 37\n          }\n        }), React.createElement(ListItem.Content, {\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 37\n          }\n        }, React.createElement(ListItem.Title, {\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 41\n          }\n        }, item.sequenceNumber, \"  \", item.taskName), React.createElement(ListItem.Subtitle, {\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 41\n          }\n        }, item.timeSeconds, \"  Seconds\")), React.createElement(ListItem.Chevron, {\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 37\n          }\n        }));\n      })), React.createElement(View, {\n        style: styles.detailButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          marginLeft: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }\n      }, React.createElement(Button, {\n        titleStyle: {\n          color: \"white\",\n          fontSize: 10\n        },\n        small: true,\n        backgroundColor: '#CCCCCC',\n        leftIcon: {\n          name: 'edit'\n        },\n        title: \"Add Task\",\n        onPress: function onPress() {\n          _this5.props.navigation.navigate('AddTask', {\n            timerkey: \"\" + JSON.stringify(_this5.state.timerkey)\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 1,\n          marginLeft: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }\n      }, React.createElement(Button, {\n        titleStyle: {\n          color: \"white\",\n          fontSize: 10\n        },\n        small: true,\n        backgroundColor: '#CCCCCC',\n        leftIcon: {\n          name: 'edit'\n        },\n        title: \"Edit Timer\",\n        onPress: function onPress() {\n          _this5.props.navigation.navigate('EditTimer', {\n            timerkey: \"\" + JSON.stringify(_this5.state.key)\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 1,\n          marginLeft: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }\n      }, React.createElement(Button, {\n        titleStyle: {\n          color: \"white\",\n          fontSize: 10\n        },\n        small: true,\n        backgroundColor: '#999999',\n        color: '#FFFFFF',\n        leftIcon: {\n          name: 'delete'\n        },\n        title: \"Delete\",\n        onPress: function onPress() {\n          return _this5.createTwoButtonAlert(_this5.state.key);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }\n      })))));\n    }\n  }]);\n\n  return TimerDetailScreen;\n}(Component);\n\nTimerDetailScreen.navigationOptions = function (_ref) {\n  var navigation = _ref.navigation;\n  return {\n    title: JSON.parse(navigation.getParam('timerName', 'Timer Details'))\n  };\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  subContainer: {\n    flex: 1,\n    paddingBottom: 20,\n    borderBottomWidth: 2,\n    borderBottomColor: '#CCCCCC'\n  },\n  activity: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  detailButton: {\n    marginTop: 10,\n    flexDirection: 'row'\n  },\n  containerAlert: {\n    flex: 1,\n    justifyContent: \"space-around\",\n    alignItems: \"center\"\n  }\n});\nexport default TimerDetailScreen;","map":{"version":3,"sources":["/Users/sidkumar/Documents/swTimerApp/components/TimerDetailScreen.js"],"names":["React","Component","ListItem","Text","Card","Button","Icon","Avatar","firebase","TimerDetailScreen","props","onCollectionUpdate","querySnapshot","tasks","forEach","doc","data","taskName","timeSeconds","sequenceNumber","image","console","log","push","key","id","state","sort","a","b","Number","setState","length","navigation","refDetails","firestore","collection","JSON","parse","getParam","orderBy","isLoading","timers","ref","unsubscribe","onSnapshot","get","then","exists","timer","timerkey","delete","navigate","catch","error","Alert","alert","text","onPress","style","deleteTimer","cancelable","styles","activity","container","subContainer","map","item","i","taskkey","stringify","uri","detailButton","flex","marginLeft","color","fontSize","name","createTwoButtonAlert","navigationOptions","title","StyleSheet","create","padding","paddingBottom","borderBottomWidth","borderBottomColor","position","left","right","top","bottom","alignItems","justifyContent","marginTop","flexDirection","containerAlert"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, ScrollView, ActivityIndicator, View } from 'react-native';\nimport {  ListItem, Text, Card, Button , Icon, Avatar} from 'react-native-elements';\nimport firebase from '../Firebase';\nimport {  Alert } from \"react-native\";\n\nclass TimerDetailScreen extends Component {\n\n    static navigationOptions = ({ navigation }) => {\n        return {\n            title: JSON.parse(navigation.getParam('timerName', 'Timer Details')),\n        };\n    };\n\n    constructor(props) {\n        super(props);\n        const { navigation } = this.props;\n        this.refDetails = firebase.firestore().collection('timers').doc(JSON.parse(navigation.getParam('timerkey'))).collection('tasks').orderBy('sequenceNumber');\n\n        this.state = {\n            isLoading: true,\n            timers: {},\n            key: ''\n        };\n    }\n\n    componentDidMount() {\n        const { navigation } = this.props;\n\n        const ref = firebase.firestore().collection('timers').doc(JSON.parse(navigation.getParam('timerkey')));\n        this.unsubscribe = this.refDetails.onSnapshot(this.onCollectionUpdate);\n        ref.get().then((doc) => {\n            if (doc.exists) {\n                this.setState({\n                    timer: doc.data(),\n                    key: doc.id,\n                    isLoading: false,\n                    timerkey:JSON.parse(navigation.getParam('timerkey')),\n                });\n\n            } else {\n                console.log(\"No such document!\");\n            }\n        });\n\n    }\n\n\n\n    onCollectionUpdate = (querySnapshot) => {\n        const tasks = [];\n        querySnapshot.forEach((doc) => {\n            const { taskName, timeSeconds, sequenceNumber, image } = doc.data();\n            console.log(\"Tasks data\")\n            console.log(doc.data());\n            tasks.push({\n                key: doc.id,\n                doc, // DocumentSnapshot\n                taskName,\n                timeSeconds,\n                sequenceNumber,\n                image\n            });\n        });\n        console.log(\"Setting state\");\n        console.log(this.state);\n        tasks.sort((a, b) => (Number(a.sequenceNumber) > Number(b.sequenceNumber)) ? 1 : -1)\n        this.setState({\n            tasks : tasks\n        });\n        console.log(\"After setting the state\");\n        console.log(tasks.length);\n        console.log(tasks[0]);\n\n\n    }\n\n\n\n\n    deleteTimer(key) {\n        const { navigation } = this.props;\n        this.setState({\n            isLoading: true\n        });\n        firebase.firestore().collection('timers').doc(key).delete().then(() => {\n            console.log(\"Document successfully deleted!\");\n            this.setState({\n                isLoading: false\n            });\n            navigation.navigate('Timer');\n        }).catch((error) => {\n            console.error(\"Error removing document: \", error);\n            this.setState({\n                isLoading: false\n            });\n        });\n\n    }\n\n    createTwoButtonAlert(key) {\n        console.log(\"In the alert function\",key);\n        //alert('Alert with one button');\n        Alert.alert(\n            \"Confirm\",\n            \"Do you really want to delete\",\n            [\n                {\n                    text: \"Cancel\",\n                    onPress: () => console.log(\"Cancel Pressed\"),\n                    style: \"cancel\"\n                },\n                {\n                    text: \"Ok\",\n                    onPress: () => this.deleteTimer(this.state.key)\n                }\n            ],\n            { cancelable: true }\n        );\n    }\n\n\n\n\n\n    render() {\n        if(this.state.isLoading){\n            return(\n                <View style={styles.activity}>\n                    <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n                </View>\n            )\n        }\n        return (\n            <ScrollView>\n                <Card style={styles.container}>\n                    <View style={styles.subContainer}>\n\n\n                        {\n                            this.state.tasks.map((item, i) => (\n                                <ListItem\n                                    key={i}\n                                    bottomDivider\n                                    onPress={() => {\n                                        console.log(\"pressed on details\");\n                                        this.props.navigation.navigate('EditTask', {\n                                            taskkey: `${JSON.stringify(item.key)}`,\n                                            timerkey: `${JSON.stringify(this.state.timerkey)}`,\n                                        });\n                                    }}\n\n                                >\n                                    <Avatar rounded title=\"T\" source={{uri: item.image}} />\n                                    <ListItem.Content>\n                                        <ListItem.Title >{item.sequenceNumber}  {item.taskName}</ListItem.Title>\n                                        <ListItem.Subtitle >{item.timeSeconds}  Seconds</ListItem.Subtitle>\n                                    </ListItem.Content>\n                                    <ListItem.Chevron />\n                                </ListItem>\n\n                                // <ListItem key={i} bottomDivider >\n                                //     <ListItem.Content>\n                                //         <ListItem.Title >{item.name}</ListItem.Title>\n//\n                                //    </ListItem.Content>\n\n                                //  </ListItem>\n\n\n                            ))\n                        }\n\n                    </View>\n                    <View style={styles.detailButton}>\n                        \n                        <View style={{flex:1 , marginLeft:10}} >\n                        <Button\n                            titleStyle={{\n                                color: \"white\",\n                                fontSize: 10,\n                            }}\n                            small\n                            backgroundColor={'#CCCCCC'}\n                            leftIcon={{name: 'edit'}}\n                            title='Add Task'\n                            onPress={() => {\n                                this.props.navigation.navigate('AddTask', {\n                                    timerkey: `${JSON.stringify(this.state.timerkey)}`,\n                                });\n                            }} />\n                        </View>\n                        <View style={{flex:1 , marginLeft:10}} >\n                        <Button\n                            titleStyle={{\n                                color: \"white\",\n                                fontSize: 10,\n                            }}\n                            small\n                            backgroundColor={'#CCCCCC'}\n                            leftIcon={{name: 'edit'}}\n                            title='Edit Timer'\n                            onPress={() => {\n                                this.props.navigation.navigate('EditTimer', {\n                                    timerkey: `${JSON.stringify(this.state.key)}`,\n                                });\n                            }} />\n                        </View>\n                        <View style={{flex:1 , marginLeft:10}} >\n                        <Button\n                            titleStyle={{\n                                color: \"white\",\n                                fontSize: 10,\n                            }}\n                            small\n                            backgroundColor={'#999999'}\n                            color={'#FFFFFF'}\n                            leftIcon={{name: 'delete'}}\n                            title='Delete'\n                            onPress={() => this.createTwoButtonAlert(this.state.key)} />\n\n\n\n                        </View>\n\n\n                    </View>\n\n                </Card>\n            </ScrollView>\n        );\n    }\n\n\n\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 20\n    },\n    subContainer: {\n        flex: 1,\n        paddingBottom: 20,\n        borderBottomWidth: 2,\n        borderBottomColor: '#CCCCCC',\n    },\n    activity: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    detailButton: {\n        marginTop: 10,\n        flexDirection: 'row' },\n\n               containerAlert: {\n                   flex: 1,\n                   justifyContent: \"space-around\",\n                   alignItems: \"center\"\n               }\n\n})\n\nexport default TimerDetailScreen;"]},"metadata":{},"sourceType":"module"}