{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/sidkumar/Documents/swTimerApp/components/AddTimerScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Button } from 'react-native-elements';\nimport firebase from \"../Firebase\";\nimport * as ImagePicker from 'expo-image-picker';\nimport * as Permissions from 'expo-permissions';\nimport uuid from 'uuid';\nimport moment from \"moment\";\n\nvar AddTimerScreen = function (_Component) {\n  _inherits(AddTimerScreen, _Component);\n\n  var _super = _createSuper(AddTimerScreen);\n\n  function AddTimerScreen(props) {\n    var _this;\n\n    _classCallCheck(this, AddTimerScreen);\n\n    _this = _super.call(this, props);\n\n    _this.updateTextInput = function (text, field) {\n      var state = _this.state;\n      state[field] = text;\n\n      _this.setState(state);\n    };\n\n    _this._maybeRenderUploadingOverlay = function () {\n      if (_this.state.uploading) {\n        return React.createElement(View, {\n          style: [StyleSheet.absoluteFill, {\n            backgroundColor: 'rgba(0,0,0,0.4)',\n            alignItems: 'center',\n            justifyContent: 'center'\n          }],\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }\n        }, React.createElement(ActivityIndicator, {\n          color: \"#fff\",\n          animating: true,\n          size: \"large\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }\n        }));\n      }\n    };\n\n    _this._maybeRenderImage = function () {\n      var image = _this.state.image;\n      console.log(\"uploaded \", _this.state.image);\n\n      if (!image) {\n        return;\n      }\n\n      return React.createElement(View, {\n        style: {\n          marginTop: 30,\n          width: 50,\n          borderRadius: 3,\n          elevation: 2\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          borderTopRightRadius: 3,\n          borderTopLeftRadius: 3,\n          shadowColor: 'rgba(0,0,0,1)',\n          shadowOpacity: 0.2,\n          shadowOffset: {\n            width: 4,\n            height: 4\n          },\n          shadowRadius: 5,\n          overflow: 'hidden'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: image\n        },\n        style: {\n          width: 50,\n          height: 50\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }\n      })));\n    };\n\n    _this._share = function () {\n      Share.share({\n        message: _this.state.image,\n        title: 'Check out this photo',\n        url: _this.state.image\n      });\n    };\n\n    _this._copyToClipboard = function () {\n      Clipboard.setString(_this.state.image);\n      alert('Copied image URL to clipboard');\n    };\n\n    _this._takePhoto = function _callee() {\n      var pickerResult;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n                allowsEditing: true,\n                aspect: [4, 3]\n              }));\n\n            case 2:\n              pickerResult = _context.sent;\n\n              _this._handleImagePicked(pickerResult);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this._pickImage = function _callee2() {\n      var pickerResult;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n                allowsEditing: true,\n                aspect: [4, 3]\n              }));\n\n            case 2:\n              pickerResult = _context2.sent;\n\n              _this._handleImagePicked(pickerResult);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this._handleImagePicked = function _callee3(pickerResult) {\n      var uploadUrl;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n\n              _this.setState({\n                uploading: true\n              });\n\n              if (pickerResult.cancelled) {\n                _context3.next = 7;\n                break;\n              }\n\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(uploadImageAsync(pickerResult.uri));\n\n            case 5:\n              uploadUrl = _context3.sent;\n\n              _this.setState({\n                image: uploadUrl\n              });\n\n            case 7:\n              _context3.next = 13;\n              break;\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n              alert('Upload failed, sorry :(');\n\n            case 13:\n              _context3.prev = 13;\n\n              _this.setState({\n                uploading: false\n              });\n\n              return _context3.finish(13);\n\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 9, 13, 16]], Promise);\n    };\n\n    _this.ref = firebase.firestore().collection('timers');\n    _this.state = {\n      name: '',\n      isLoading: false,\n      image: null\n    };\n    return _this;\n  }\n\n  _createClass(AddTimerScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n            case 2:\n              _context4.next = 4;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"saveTimer\",\n    value: function saveTimer() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      var newTimer = this.ref.add({\n        name: this.state.name,\n        image: this.state.image\n      }).then(function (docRef) {\n        _this2.setState({\n          name: '',\n          isLoading: false\n        });\n\n        _this2.props.navigation.goBack();\n      }).catch(function (error) {\n        console.error(\"Error adding document: \", error);\n\n        _this2.setState({\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var image = this.state.image;\n\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: styles.activity,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          color: \"#0000ff\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 21\n          }\n        }));\n      }\n\n      return React.createElement(ScrollView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.subContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        maxLength: 20,\n        placeholder: 'Name',\n        value: this.state.name,\n        onChangeText: function onChangeText(text) {\n          return _this3.updateTextInput(text, 'name');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 17\n        }\n      }, this._maybeRenderImage(), this._maybeRenderUploadingOverlay(), React.createElement(StatusBar, {\n        barStyle: \"default\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }\n      }, React.createElement(Button, {\n        onPress: this._pickImage,\n        title: \"Pick image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 1,\n          marginLeft: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }\n      }, React.createElement(Button, {\n        onPress: this._takePhoto,\n        title: \"Take photo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }\n      }))), React.createElement(View, {\n        style: {\n          flex: 1,\n          marginTop: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }\n      }, React.createElement(Button, {\n        large: true,\n        leftIcon: {\n          name: 'save'\n        },\n        title: \"Save\",\n        onPress: function onPress() {\n          return _this3.saveTimer();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return AddTimerScreen;\n}(Component);\n\nAddTimerScreen.navigationOptions = {\n  title: 'Add Timer'\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  subContainer: {\n    flex: 1,\n    marginBottom: 20,\n    padding: 5,\n    borderBottomWidth: 2,\n    borderBottomColor: '#CCCCCC'\n  },\n  activity: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    marginTop: 10,\n    flexDirection: 'row'\n  }\n});\n\nfunction uploadImageAsync(uri) {\n  var blob, ref, snapshot;\n  return _regeneratorRuntime.async(function uploadImageAsync$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return _regeneratorRuntime.awrap(new Promise(function (resolve, reject) {\n            var xhr = new XMLHttpRequest();\n\n            xhr.onload = function () {\n              resolve(xhr.response);\n            };\n\n            xhr.onerror = function (e) {\n              console.log(e);\n              reject(new TypeError('Network request failed'));\n            };\n\n            xhr.responseType = 'blob';\n            xhr.open('GET', uri, true);\n            xhr.send(null);\n          }));\n\n        case 2:\n          blob = _context5.sent;\n          ref = firebase.storage().ref().child(Date.now() + 'taskimage');\n          console.log(\"in uploadimage \", ref);\n          _context5.next = 7;\n          return _regeneratorRuntime.awrap(ref.put(blob));\n\n        case 7:\n          snapshot = _context5.sent;\n          _context5.next = 10;\n          return _regeneratorRuntime.awrap(snapshot.ref.getDownloadURL());\n\n        case 10:\n          return _context5.abrupt(\"return\", _context5.sent);\n\n        case 11:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport default AddTimerScreen;","map":{"version":3,"sources":["/Users/sidkumar/Documents/swTimerApp/components/AddTimerScreen.js"],"names":["React","Component","Button","firebase","ImagePicker","Permissions","uuid","moment","AddTimerScreen","props","updateTextInput","text","field","state","setState","_maybeRenderUploadingOverlay","uploading","StyleSheet","absoluteFill","backgroundColor","alignItems","justifyContent","_maybeRenderImage","image","console","log","marginTop","width","borderRadius","elevation","borderTopRightRadius","borderTopLeftRadius","shadowColor","shadowOpacity","shadowOffset","height","shadowRadius","overflow","uri","_share","Share","share","message","title","url","_copyToClipboard","Clipboard","setString","alert","_takePhoto","launchCameraAsync","allowsEditing","aspect","pickerResult","_handleImagePicked","_pickImage","launchImageLibraryAsync","cancelled","uploadImageAsync","uploadUrl","ref","firestore","collection","name","isLoading","askAsync","CAMERA_ROLL","CAMERA","newTimer","add","then","docRef","navigation","goBack","catch","error","styles","activity","container","subContainer","button","flex","marginLeft","saveTimer","navigationOptions","create","padding","marginBottom","borderBottomWidth","borderBottomColor","position","left","right","top","bottom","flexDirection","Promise","resolve","reject","xhr","XMLHttpRequest","onload","response","onerror","e","TypeError","responseType","open","send","blob","storage","child","Date","now","put","snapshot","getDownloadURL"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, ScrollView, ActivityIndicator, View, TextInput , StatusBar, Image, Text} from 'react-native';\nimport { Button } from 'react-native-elements';\nimport firebase from '../Firebase';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as Permissions from 'expo-permissions';\nimport uuid from 'uuid';\nimport moment from \"moment\"\n\nclass AddTimerScreen extends Component {\n    static navigationOptions = {\n        title: 'Add Timer',\n    };\n    constructor(props) {\n        super(props);\n        this.ref = firebase.firestore().collection('timers');\n        this.state = {\n            name: '',\n            isLoading: false,\n            image: null,\n        };\n    }\n\n    async componentDidMount() {\n        await Permissions.askAsync(Permissions.CAMERA_ROLL);\n        await Permissions.askAsync(Permissions.CAMERA);\n    }\n\n    updateTextInput = (text, field) => {\n        const state = this.state\n        state[field] = text;\n        this.setState(state);\n    }\n\n    saveTimer() {\n        this.setState({\n            isLoading: true,\n        });\n        const newTimer = this.ref.add({\n            name: this.state.name,\n            image:this.state.image,\n        }).then((docRef) => {\n\n            this.setState({\n                name: '',\n                isLoading: false,\n            });\n            this.props.navigation.goBack();\n        })\n            .catch((error) => {\n                console.error(\"Error adding document: \", error);\n                this.setState({\n                    isLoading: false,\n                });\n            });\n    }\n\n    _maybeRenderUploadingOverlay = () => {\n        if (this.state.uploading) {\n            return (\n                <View\n                    style={[\n                        StyleSheet.absoluteFill,\n                        {\n                            backgroundColor: 'rgba(0,0,0,0.4)',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                        },\n                    ]}>\n                    <ActivityIndicator color=\"#fff\" animating size=\"large\" />\n                </View>\n            );\n        }\n    };\n\n    _maybeRenderImage = () => {\n        let { image } = this.state;\n        console.log(\"uploaded \",this.state.image);\n        if (!image) {\n            return;\n        }\n\n        return (\n            <View\n                style={{\n                    marginTop: 30,\n                    width: 50,\n                    borderRadius: 3,\n                    elevation: 2,\n                }}>\n                <View\n                    style={{\n                        borderTopRightRadius: 3,\n                        borderTopLeftRadius: 3,\n                        shadowColor: 'rgba(0,0,0,1)',\n                        shadowOpacity: 0.2,\n                        shadowOffset: { width: 4, height: 4 },\n                        shadowRadius: 5,\n                        overflow: 'hidden',\n                    }}>\n                    <Image source={{ uri: image }} style={{ width: 50, height: 50 }} />\n                </View>\n\n            </View>\n        );\n    };\n\n    _share = () => {\n        Share.share({\n            message: this.state.image,\n            title: 'Check out this photo',\n            url: this.state.image,\n        });\n    };\n\n    _copyToClipboard = () => {\n        Clipboard.setString(this.state.image);\n        alert('Copied image URL to clipboard');\n    };\n\n    _takePhoto = async () => {\n        let pickerResult = await ImagePicker.launchCameraAsync({\n            allowsEditing: true,\n            aspect: [4, 3],\n        });\n\n        this._handleImagePicked(pickerResult);\n    };\n\n\n    _pickImage = async () => {\n        let pickerResult = await ImagePicker.launchImageLibraryAsync({\n            allowsEditing: true,\n            aspect: [4, 3],\n        });\n\n        this._handleImagePicked(pickerResult);\n    };\n\n    _handleImagePicked = async pickerResult => {\n        try {\n            this.setState({ uploading: true });\n\n            if (!pickerResult.cancelled) {\n                const uploadUrl = await uploadImageAsync(pickerResult.uri);\n                this.setState({ image: uploadUrl });\n            }\n        } catch (e) {\n            console.log(e);\n            alert('Upload failed, sorry :(');\n        } finally {\n            this.setState({ uploading: false });\n        }\n    };\n\n\n    render() {\n        let { image } = this.state;\n\n        if(this.state.isLoading){\n            return(\n                <View style={styles.activity}>\n                    <ActivityIndicator size=\"large\" color=\"#0000ff\"/>\n                </View>\n            )\n        }\n        return (\n            <ScrollView style={styles.container}>\n                <View style={styles.subContainer}>\n                    <TextInput\n                        maxLength={20}\n                        placeholder={'Name'}\n                        value={this.state.name}\n                        onChangeText={(text) => this.updateTextInput(text, 'name')}\n                    />\n                </View>\n                <View >\n\n\n\n\n                    {this._maybeRenderImage()}\n                    {this._maybeRenderUploadingOverlay()}\n\n                    <StatusBar barStyle=\"default\" />\n                </View>\n\n\n                <View style={styles.button}>\n                    <View style={{flex:1 }} >\n                    <Button\n                        onPress={this._pickImage}\n                        title=\"Pick image\"\n                    />\n                    </View>\n\n                    <View style={{flex:1 , marginLeft:10}} >\n                    <Button onPress={this._takePhoto} title=\"Take photo\" />\n                    </View>\n\n\n                </View>\n                <View style={{flex:1 , marginTop:10}} >\n                    <Button\n                        large\n                        leftIcon={{name: 'save'}}\n                        title='Save'\n                        onPress={() => this.saveTimer()} />\n                </View>\n            </ScrollView>\n        );\n    }\n\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 20\n    },\n    subContainer: {\n        flex: 1,\n        marginBottom: 20,\n        padding: 5,\n        borderBottomWidth: 2,\n        borderBottomColor: '#CCCCCC',\n    },\n    activity: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    button: {\n        marginTop: 10,\n        flexDirection: 'row' }\n})\n\nasync function uploadImageAsync(uri) {\n    // Why are we using XMLHttpRequest? See:\n    // https://github.com/expo/expo/issues/2402#issuecomment-443726662\n    const blob = await new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.onload = function() {\n            resolve(xhr.response);\n        };\n        xhr.onerror = function(e) {\n            console.log(e);\n            reject(new TypeError('Network request failed'));\n        };\n        xhr.responseType = 'blob';\n        xhr.open('GET', uri, true);\n        xhr.send(null);\n    });\n\n    const ref = firebase\n        .storage()\n        .ref()\n        .child(Date.now()+'taskimage');\n    console.log(\"in uploadimage \",ref);\n    const snapshot = await ref.put(blob);\n\n\n    // We're done with the blob, close and release it\n    //blob.close();\n\n    return await snapshot.ref.getDownloadURL();\n}\n\nexport default AddTimerScreen;"]},"metadata":{},"sourceType":"module"}